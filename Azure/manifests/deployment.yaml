apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{projectName}}
  labels:
    app: {{projectName}}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{projectName}}
  template:
    metadata:
      name: {{projectName}}
      labels:
        app: {{projectName}}
    spec:
      volumes:
        - name: build
          emptyDir: {}
        - name: configs-volume
          configMap:
            name: {{projectName}}-config
      initContainers:
        - name: populate
          image: "{{acrUrl}}/{{repoName}}:{{Build.BuildId}}"
          volumeMounts:
            - mountPath: /build-new
              name: build
          command: ['sh', '-c', 'cp -r /build/. /build-new/']
      containers:
        - name: nginx
          image: nginx:1.22.0-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          workingDir: /build
          volumeMounts:
            - mountPath: /build
              name: build
            - mountPath: /etc/nginx/conf.d/default.conf
              name: configs-volume
              subPath: nginx.conf
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 2
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 10
            periodSeconds: 2
